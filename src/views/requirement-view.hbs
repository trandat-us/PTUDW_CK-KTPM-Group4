<link href="https://cdn.lineicons.com/4.0/lineicons.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="container-fluid mt-3" style="overflow-y: auto;">
    <div class="row">
        <div class="col-sm-3">
            <div class="card custom-card">
                <!-- Header của card -->
                <div class="card-header bg-white border-0 align-items-center">
                    <div class="row">
                        <div class="col col-9">
                            <h3 class="card-title">Requirement Type</h3>
                        </div>
                        <div class="col d-flex justify-content-end">
                            <button id="filterButton" type="button" class="btn">
                                <i class="fas fa-filter"></i>&nbsp;&nbsp;
                                Filter
                            </button>
                        </div>
                    </div>
                </div>
                <div class="custom-divider"></div>
                <!-- Nội dung (body) của card -->

                <div class="card-body p-0">
                    <div class="col">
                        <div class="d-flex flex-column gap-3 requirements-list px-4 py-3"
                            style="color: #232360; font-weight: 700; font-size: 1.1rem;">
                            {{#each requirement_types}}
                            <div class="requirement-item">
                                <label for="checkbox{{this.name}}" class="d-flex">
                                    <input class="form-check-input me-2" type="checkbox" value="1" checked id="checkboxRequirementType{{this.requirement_type_id}}">
                                    {{this.name}}
                                </label>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9">
            <div class="card custom-card">
                <!-- Header của card -->
                <div class="card-header bg-white border-0 align-items-center">
                    <div class="row">
                        <div class="col-4">
                            <h3 class="card-title">Requirements</h3>
                        </div>
                        <div class="col d-flex justify-content-end">
                            <ul class="actions-header list-unstyled d-flex flex-row">
                                <li id="requirements-filter-box">
                                    <form name="search-requirement" role="search">
                                        <input type="text" class="form-control" id="search-input-requirement" placeholder="Search Title..."
                                            style="color: #C4C4DA; font-weight: 600; width: 100%; background-color: #F1F1F1; border-radius: 5px; border:none; padding: 10px" />
                                    </form>
                                <li>
                                <!-- Các nút chức năng sẽ được thêm vào đây -->
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="custom-divider"></div>

                <!-- Nội dung (body) của card -->
                <div class="card-body" id="main-content">
                    <div class="container-fluid" id="requirementsContainer" style="overflow-y: auto;">
                        <div class="d-flex align-items-center justify-content-between pb-3" style="height: 10%;">
                            <div class="top-left-requirement-list d-flex justify-content-center align-items-center gap-3" style="height: 100%;">
                                <p style="font-size: 1rem; color: #9c9c9c; font-weight: 600; margin: 0;">Show</p>
                                <select name="show" class="form-select number-of-row" aria-label="Default select example" required>
                                    <option value="10">10</option>
                                    <option value="20">20</option>
                                    <option value="30">30</option>
                                    <option value="50">50</option>
                                </select>
                            </div>
                            <div class="top-right-requirement-list d-flex justify-content-between align-items-center gap-3">
                                <select name="show" class="form-select feature" aria-label="Default select example"
                                    style="width: max-content;" required>
                                    <option value="2">Requirement's Code</option>
                                    <option value="3">Requirement's  Title</option>
                                </select>
                                <select name="show" style="width: max-content;" class="form-select sorting"
                                    aria-label="Default select example" required>
                                    <option value="1">ASC</option>
                                    <option value="2">DES</option>
                                </select>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-borderless">
                                <thead class="fs-6">
                                    <th scope="col"></th>
                                    <th scope="col">Requirement's Code</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Action</th>
                                </thead>
                                <tbody class="fs-6">
                                    {{#each requirements}}
                                    <tr>
                                        <td class="isSelected
                                        "><input class="form-check-input" type="checkbox" value=""
                                            id="flexCheckDefault"></td>
                                        <td class="requirement-code">{{this.requirement_code}}</td>
                                        <td class="requirement-title">{{this.requirement_name}}</td>
                                        <td class="d-none requirement-type-of-requirement ">{{this.requirement_type_id}}</td>
                                        <td class="actions" data-requirement-code="{{this.requirement_code}}">
                                            <!-- Các nút chức năng sẽ được thêm vào đây -->
                                        </td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                        <div class="pagination-container d-flex justify-content-start align-items-center ms-5 mt-3">
                            Page
                            <button class="btn btn-link" id="prevPageBtn">
                                <i class="fa fa-chevron-left" aria-hidden="true"></i>
                            </button>
                            <span id="currentPage" class="mx-2 border px-2 py-1">1</span>/  <span id="totalPages">3</span>
                            <button class="btn btn-link" id="nextPageBtn">
                                <i class="fa fa-chevron-right" aria-hidden="true"></i>
                            </button>
                        </div>        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{{!-- Create Module Modal --}}

{{#block "modal"}}
<div class="modal fade" id="modalAddRequirementType" tabindex="1" role="dialog" aria-labelledby="modalTitleId"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content align-items-center"
            style="color: #232360; font-weight: 900; padding: 0 6%; background-color: #F3F4F8;">
            <div class="modal-header" style="border-bottom: none;">
                <p class="modal-title fs-3" id="modalTitleId">Add Requirement Type</p>
            </div>
            <div class="modal-body" style="border-bottom: none; width: 100%;">
                <div class="row mb-3">
                    <div>
                        <lable for="description">Requirement Type <span style="color: red">*</span>:</lable>
                        <input type="text" class="form-control" name="requirement-type" id="requirement-type"
                            placeholder="Enter Requirement Type" required>
                        <div id="alertMessageRequirementType" style="display: none; color: red"></div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div>
                        <lable for="description">Description:</lable>
                        <textarea name="description" id="description" class="form-control" rows="3"
                            placeholder="Enter Description"></textarea>
                    </div>
                </div>
            </div>

            <div class="modal-footer" style="border-top: none; align-items: center;">
                <button type="button" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalAddRequirement" tabindex="-1" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content align-items-center"
            style="color: #232360; font-weight: 900; padding: 0 6%; background-color: #F3F4F8;">
            <div class="modal-header" style="border-bottom: none;">
                <p class="modal-title fs-3" id="modalTitleId">Add Requirement</p>
            </div>
            <div class="modal-body" style="border-bottom: none; width: 100%;">
                <div class="row mb-3">
                    <div>
                        <label for="description">Requirement Title <span style="color: red">*</span>:</label>
                        <input type="text" class="form-control" name="requirement-title" id="requirement-title"
                            placeholder="Enter Requirement Title" required>
                        <div id="alertMessageRequirementTitle" style="display: none; color: red">Please enter Requirement Title</div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div>
                        <label for="description">Requirement Type:</label>
                        <select name="requirement-type-selection" id="requirement-type-selection" class="form-select">
                            <!-- Options will be dynamically loaded here -->
                        </select>
                    </div>
                </div>
                <div class="row mb-3">
                    <div>
                        <label for="description">Requirement Description:</label>
                        <textarea name="add-description" id="add-description" class="form-control" rows="3"
                            placeholder="Enter Requirement Description"></textarea>
                    </div>
                </div>
                <div class="row mb-3">
                    <div>
                        <label for="description">Attachments:</label>
                        <div id="myDropzone" class="dropzone dz-clickable">
                            <div class="dz-message">
                                Drop file here or click to upload...
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="border-top: none; align-items: center;">
                <button type="button" class="btn btn-primary" id="saveRequirementBtn">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalDetailsRequirement" tabindex="-1" role="dialog" aria-labelledby="modalTitleId"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content align-items-center"
            style="color: #232360; font-weight: 900; padding: 0 6%; background-color: #F3F4F8;">
            <div class="modal-header" style="border-bottom: none;">
                <p class="modal-title fs-3" id="modalTitleId">Requirement Details</p>
            </div>
            <div class="modal-body" style="border-bottom: none; width: 100%;">
                <div class="row mb-3">
                    <div>
                        <label for="description">Requirement Title <span style="color: red">*</span>:</label>
                        <input type="text" class="form-control" name="requirement-title" id="requirement-title" readonly
                            placeholder="Enter Requirement Title" required>
                        <div id="alertMessageRequirementTitle" style="display: none; color: red"></div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div>
                        <label for="description">Requirement Type <span style="color: red">*</span>:</label>
                        <input type="text" class="form-control" name="requirement-type" id="requirement-type" readonly
                            placeholder="Enter Requirement Type" required>
                        <div id="alertMessageRequirementType" style="display: none; color: red"></div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div>
                        <label for="description">Requirement Description:</label>
                        <textarea name="description" id="description" class="form-control" rows="3" readonly
                            placeholder="Enter Requirement Description"></textarea>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">Linked Test Case ID</th>
                                    <th scope="col">Name</th>
                                </tr>
                            </thead>
                            <tbody id="testCaseTableBody">
                                <!-- Test cases will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="border-top: none; align-items: center;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Requirement Modal -->
<div class="modal fade" id="modalEditRequirement" tabindex="-1" role="dialog" aria-labelledby="modalTitleId"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content align-items-center"
            style="color: #232360; font-weight: 900; padding: 0 6%; background-color: #F3F4F8;">
            <div class="modal-header" style="border-bottom: none;">
                <p class="modal-title fs-3" id="modalTitleId">Edit Requirement</p>
            </div>
            <div class="modal-body" style="border-bottom: none; width: 100%;">
                <form id="edit-requirement-form">
                    <div class="row mb-3">
                        <div>
                            <label for="edit-requirement-title">Requirement Title (cannot change):</label>
                            <input type="text" class="form-control" name="edit-requirement-title" id="edit-requirement-title" required>
                            <div id="alertMessageRequirementTitle" style="display: none; color: red"></div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div>
                            <label for="edit-requirement-type">Requirement Type (cannot change):</label>
                            <input type="text" class="form-control" name="edit-requirement-type" id="edit-requirement-type" required>
                            <div id="alertMessageRequirementType" style="display: none; color: red"></div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div>
                            <label for="edit-description">Requirement Description:</label>
                            <textarea name="edit-description" id="edit-description" class="form-control" rows="3" required></textarea>
                        </div>
                    </div>
                    <div class="modal-footer" style="border-top: none; align-items: center;">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 11">
</div>

{{/block}}
{{!-- Page's Functionality Button --}}

{{#block "additional-button"}}
{{#if permissions.canAdd}}
<div class="text-right">
    <button type="button" class="btn btn-light-green btn-add me-2" data-bs-toggle="modal"
        data-bs-target="#modalAddRequirementType">
        <i class="fas fa-plus-square"></i>  
        Add Requirement Type
    </button>
</div>
{{/if}}
{{/block}}

{{!-- Additional Scripts + CSS --}}

{{#block "script"}}
<!-- CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.2/dropzone.min.css" />
<!-- JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.2/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>

<script src="/js/addModuleModal.js"></script>
<script src="/js/requirementActionBtn.js"></script>

<script>
    // Custom view by user permission
    customViewByUserPermission();
    function customViewByUserPermission() {
        if ({{permissions.canImport}}) {
            addImportButton();
        }
        if ({{permissions.canExport}}) {
            addExportButton();
        }
        if ({{permissions.canView}}) {
            addViewButton();
        }
        if ({{permissions.canEdit}}) {
            addEditButton();
        }
        if ({{permissions.canDelete}}) {
            addDeleteButton();
        }
        if ({{permissions.canAdd}}) {
            addAddButton();
        }
    }

    function addViewButton() {
        document.querySelectorAll('.actions').forEach(actionContainer => {
            // get data-requirement-code from actionContainer and bind to button
            let requirementCode = actionContainer.getAttribute('data-requirement-code');

            let button = document.createElement('i');
            button.className = 'fa fa-eye clickable';
            button.setAttribute('style', 'margin-right: 20px; cursor: pointer');
            button.setAttribute('data-bs-toggle', 'tooltip');
            button.setAttribute('data-bs-placement', 'top');
            button.setAttribute('data-bs-title', 'Detail');
            button.setAttribute('data-requirement-code', requirementCode);
            actionContainer.appendChild(button);
        });
    }

    function addEditButton() {
        document.querySelectorAll('.actions').forEach(actionContainer => {
            // get data-requirement-code from actionContainer and bind to button
            let requirementCode = actionContainer.getAttribute('data-requirement-code');
            
            let button = document.createElement('i');
            button.className = 'fa fa-pencil clickable text-success';
            button.setAttribute('style', 'margin-right: 20px; cursor: pointer');
            button.setAttribute('data-bs-toggle', 'tooltip');
            button.setAttribute('data-bs-placement', 'top');
            button.setAttribute('data-bs-title', 'Edit');
            button.setAttribute('data-requirement-code', requirementCode);
            actionContainer.appendChild(button);
        });
    }

    function addDeleteButton() {
        document.querySelectorAll('.actions').forEach(actionContainer => {
            // get data-requirement-code from actionContainer and bind to button
            let requirementCode = actionContainer.getAttribute('data-requirement-code');

            let button = document.createElement('i');
            button.className = 'fa fa-trash clickable text-danger';
            button.setAttribute('style', 'cursor: pointer');
            button.setAttribute('data-bs-toggle', 'tooltip');
            button.setAttribute('data-bs-placement', 'top');
            button.setAttribute('data-bs-title', 'Delete');
            button.setAttribute('data-requirement-code', requirementCode);
            actionContainer.appendChild(button);
        });
    }

    function addAddButton() {
        let button = document.createElement('button');
        button.className = 'btn btn-add';
        button.setAttribute('type', 'button');
        button.setAttribute('data-bs-toggle', 'modal');
        button.setAttribute('data-bs-target', '#modalAddRequirement');
        button.innerHTML = '<i class="fas fa-plus"></i>';
        document.querySelector('.actions-header').appendChild(button);

        // Add delete button to the header
        let buttonDelete = document.createElement('button');
        buttonDelete.className = 'btn btn-delete';
        buttonDelete.id = 'btn-bg-transparent';
        buttonDelete.setAttribute('type', 'button');
        buttonDelete.innerHTML = '<i class="fas fa-trash"></i>';
        document.querySelector('.actions-header').appendChild(buttonDelete);
    }

    function addImportButton() {
        let button = document.createElement('button');
        button.className = 'btn btn-import';
        button.setAttribute('type', 'button');
        button.innerHTML = '<i class="fas fa-download"></i>   Import';
        // Add button to the header
        document.querySelector('.actions-header').appendChild(button);
    }

    function addExportButton() {
        let button = document.createElement('button');
        button.className = 'btn btn-export';
        button.setAttribute('type', 'button');
        button.innerHTML = '<i class="fas fa-upload"></i>   Export';
        button.onclick = exportToExcel;
        document.querySelector('.actions-header').appendChild(button);
    }

    function exportToExcel() {
        const xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    let jsonData = JSON.parse(xhr.responseText);
                    jsonData = jsonData.requirements;
                    
                    // Tạo một Workbook mới
                    const workbook = XLSX.utils.book_new();
                    // Tạo một Worksheet mới từ dữ liệu JSON
                    const worksheet = XLSX.utils.json_to_sheet(jsonData);
                    // Thêm Worksheet vào Workbook
                    XLSX.utils.book_append_sheet(workbook, worksheet, 'Exported Data');
                    
                    // Tạo file Excel (XLSX) từ Workbook
                    const excelBuffer = XLSX.write(workbook, { type: 'array', bookType: 'xlsx' });
                    const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    const url = URL.createObjectURL(blob);

                    // Tạo một thẻ <a> để tải xuống file
                    const link = document.createElement('a');
                    link.href = url;
                    link.download = 'exported-data.xlsx';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    // Giải phóng bộ nhớ
                    URL.revokeObjectURL(url);
                } else {
                    console.error('Error fetching data:', xhr.statusText);
                }
            }
        };

        xhr.open('GET', window.location.href + '/exportExcel', true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send();
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {      
        var currentPage = 1;
        var rowsPerPage = parseInt(document.querySelector(".number-of-row").value);

        function showPage(page) {
            var tableItems = document.querySelectorAll("#requirementsContainer table tbody tr:not(.removed-item)");
            var startIndex = (page - 1) * rowsPerPage;
            var endIndex = startIndex + rowsPerPage;

            tableItems.forEach((item, index) => {
                if (index >= startIndex && index < endIndex) {
                    item.style.display = "table-row";
                } else {
                    item.style.display = "none";
                }
            });

            document.getElementById("currentPage").textContent = page;
        }

        function updatePagination() {
            var totalRows = document.querySelectorAll("#requirementsContainer table tbody tr:not(.removed-item)").length;
            var totalPages = Math.ceil(totalRows / rowsPerPage);
            document.getElementById("totalPages").textContent = totalPages;
            return totalPages;
        }

        function paginate() {
            var totalPages = updatePagination();
            showPage(currentPage);

            document.getElementById("prevPageBtn").addEventListener('click', function() {
                currentTotal = parseInt(document.getElementById("totalPages").textContent);
                currentPage = parseInt(document.getElementById("currentPage").textContent);

                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });

            document.getElementById("nextPageBtn").addEventListener('click', function() {
                currentTotal = parseInt(document.getElementById("totalPages").textContent);
                currentPage = parseInt(document.getElementById("currentPage").textContent);

                if (currentPage < currentTotal) {
                    currentPage++;
                    showPage(currentPage);
                }
            });

            document.querySelector(".number-of-row").addEventListener("change", function() {
                rowsPerPage = parseInt(this.value);
                currentPage = 1;
                updatePagination();
                showPage(currentPage);
            });
        }

        function filterItems() {
            try {
                var searchValue = document.getElementById("search-input-requirement").value.trim().toUpperCase();
                var requirementTypeIds = [];
                var requirementTypeCheckboxes = document.querySelectorAll('.requirements-list input[type="checkbox"]');
                requirementTypeCheckboxes.forEach(checkbox => {
                    if (checkbox.checked) {
                        requirementTypeIds.push(checkbox.id.replace('checkboxRequirementType', ''));
                    }
                });

                var tableItems = document.querySelectorAll("#requirementsContainer table tbody tr");
                var selectedRowCount = document.querySelector(".number-of-row").value;
                var selectedFeature = document.querySelector(".feature").value;
                var selectedSorting = document.querySelector(".sorting").value;

                tableItems.forEach((item, index) => {
                    var title = item.querySelector(".requirement-title").textContent.trim().toUpperCase();
                    var requirementTypeId = item.querySelector('.requirement-type-of-requirement').textContent;
                    if (title.includes(searchValue) && (requirementTypeIds.length === 0 || requirementTypeIds.includes(requirementTypeId))) {
                        item.classList.remove("removed-item");
                    } else {
                        item.classList.add("removed-item");
                    }
                });

                var tbody = document.querySelector("#requirementsContainer table tbody");
                var rows = Array.from(tbody.querySelectorAll("tr"));

                if (selectedFeature === "3") { // Sắp xếp theo requirement-title
                    rows.sort((a, b) => {
                        var titleA = a.querySelector(".requirement-title").textContent.trim().toUpperCase();
                        var titleB = b.querySelector(".requirement-title").textContent.trim().toUpperCase();
                        return selectedSorting === "2" ? titleB.localeCompare(titleA) : titleA.localeCompare(titleB);
                    });
                } else if (selectedFeature === "2") { // Sắp xếp theo requirement-code
                    rows.sort((a, b) => {
                        var codeA = parseInt(a.querySelector(".requirement-code").textContent.trim());
                        var codeB = parseInt(b.querySelector(".requirement-code").textContent.trim());
                        return selectedSorting === "2" ? codeB - codeA : codeA - codeB;
                    });
                }

                let count = 0;
                rows.forEach((row, index) => {
                    if (count < selectedRowCount && !row.classList.contains("removed-item")) {
                        count++;
                    } else {
                        row.style.display = "none";
                    }
                });

                tbody.innerHTML = "";
                rows.forEach(row => tbody.appendChild(row));

                paginate();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        var tableItems = document.querySelectorAll("#requirementsContainer table tbody tr");

        for (var i = 0; i < tableItems.length; i++) {
            if (i >= 10) {
                tableItems[i].style.display = "none";
            }
        }

        document.getElementById("filterButton").addEventListener("click", filterItems);
        document.getElementById("search-input-requirement").addEventListener("input", filterItems);
        document.querySelector(".number-of-row").addEventListener("change", filterItems);
        document.querySelector(".feature").addEventListener("change", filterItems);
        document.querySelector(".sorting").addEventListener("change", filterItems);

        paginate();
    });
</script>

{{/block}}